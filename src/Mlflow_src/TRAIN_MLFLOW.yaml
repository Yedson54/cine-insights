apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: parallel-xgboost-training-
spec:
  entrypoint: parallel-training
  arguments:
    parameters:
      - name: mlflow-tracking-uri
        value: "https://user-odione-mlflow.user.lab.sspcloud.fr"  # Définir l'URI de suivi de MLflow ici
      - name: mlflow-experiment-name
        value: "Final_Experiment"  # Définir le nom de l'expérience MLflow ici
  templates:
    - name: parallel-training
      steps:
        - - name: train-and-archive-1
            template: train-and-archive
            arguments:
              parameters:
                - name: model-params
                  value: "{ \"objective\": \"reg:squarederror\", \"learning_rate\": 0.03, \"max_depth\": 5, \"min_child_weight\": 3, \"subsample\": 0.7, \"colsample_bytree\": 0.7, \"n_estimators\": 500 }"
        - - name: train-and-archive-2
            template: train-and-archive
            arguments:
              parameters:
                - name: model-params
                  value: "{ \"objective\": \"reg:squarederror\", \"learning_rate\": 0.03, \"max_depth\": 5, \"min_child_weight\": 3, \"subsample\": 0.7, \"colsample_bytree\": 0.7, \"n_estimators\": 1000 }"
        # Ajoutez d'autres tâches train-and-archive similaires pour chaque combinaison de paramètres
    - name: train-and-archive
      inputs:
        parameters:
          - name: model-params
      steps:
        - - name: train-model
            template: train-model
            arguments:
              parameters:
                - name: model-params
                  value: "{{inputs.parameters.model-params}}"
      # Il n'est pas nécessaire de référencer les sorties de train-model ici, car cela sera fait dans la tâche suivante
    - name: train-model
      inputs:
        parameters:
          - name: model-params
      outputs:
        parameters:
          - name: trained_model
            valueFrom:
              path: artifacts/models/{{workflow.name}}.pkl
          - name: ct_transformer
            valueFrom:
              path: artifacts/ct_transformers/{{workflow.name}}.pkl
          - name: metrics
            valueFrom:
              path: /path/to/metrics_file.json  # Remplacer par le chemin correct des métriques
      container:
        image: your-docker-image-containing-your-script:latest
        command: ["python", "your_script.py"]
        args: ["--mlflow-tracking-uri={{workflow.parameters.mlflow-tracking-uri}}", "--mlflow-experiment-name={{workflow.parameters.mlflow-experiment-name}}", "--model-params={{inputs.parameters.model-params}}"]
    - name: archive-results
      inputs:
        parameters:
          - name: trained_model
          - name: ct_transformer
          - name: hyperparameters
            value: "{{inputs.parameters.model-params}}"
          - name: metrics
      container:
        image: your-docker-image-for-archiving:latest
        command: ["python", "archive_script.py"]
        args: ["--trained-model={{inputs.parameters.trained_model}}", "--ct-transformer={{inputs.parameters.ct_transformer}}", "--hyperparameters={{inputs.parameters.hyperparameters}}", "--metrics={{inputs.parameters.metrics}}"]
